name: CI
on:
    pull_request:
        branches: [develop, master]
    push:
        branches: [develop, master]

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
            SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        steps:
            - uses: actions/checkout@v2
            - name: Cache node_modules
              uses: actions/cache@v1
              with:
                  path: ~/.npm
                  key: ${{runner.os}}-mykey-${{hashFiles('**/package-lock.json')}}
                  restore-keys: |
                      ${{runner.os}}-mykey-
            - name: Use NodeJs
              uses: actions/setup-node@v1
              with:
                  node-version: '16.x'
            - run: |
                  npm ci
                  npm run format:check
                  npm test -- --coverage
              env:
                  CI: true
            - name: Upload Test Coverage
              uses: actions/upload-artifact@v1
              with:
                  name: code coverage
                  path: coverage
            - name: Build Project
              if: github.event_name == 'push'
              run: npm run build
            - name: Upload Build Folder
              if: github.event_name == 'push'
              uses: actions/upload-artifact@v1
              with:
                  name: build
                  path: build
            - name: Zip Assests
              if: github.event_name == 'push' && github.ref == 'refs/heads/master'
              run: |
                  zip -r build.zip ./build
                  zip -r coverage.zip ./coverage
            - name: Create a release
              if: github.event_name == 'push' && github.ref == 'refs/heads/master'
              run: npx semantic-release
              env:
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
            - name: Deploy to Stage
              if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
              run: npx surge --project ./build --domain purring-meal.surge.sh
            - name: Deploy to Prod
              if: github.event_name == 'push' && github.ref == 'refs/heads/master'
              run: npx surge --project ./build --domain purring-meal.surge.sh
            - name: Upload Coverage Report
              if: github.event_name == 'push' && github.ref == 'refs/heads/master'
              run: npx codecov
              env:
                  CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
            - name: Open Issue
              if: failure() && github.event_name == 'pull_request'
              run: |
                curl --request POST \
                --url https://api.github.com/repos/${{ github.repository }}/issues \
                --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                --header 'content-type: application/json' \
                --data '{
                    "title": "Automated issue for commit: ${{ github.sha }}",
                    "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
                    }' \
                --fail
